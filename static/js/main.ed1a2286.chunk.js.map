{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","services/img-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","fetchImages","searchQuery","currentPage","BASE_URL","API_KEY","url","axios","get","then","response","data","hits","Searchbar","onSubmit","useState","query","setQuery","className","s","SearchForm","e","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","value","onChange","currentTarget","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","ImageGalleryItem","id","webformatURL","largeImageURL","onImgClick","src","alt","ImageGalleryItemImage","onClick","ImageGallery","map","hit","tags","Button","LoaderRings","loader","color","height","width","timeout","React","Component","modalRoot","document","querySelector","Modal","children","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","ImagesView","setHits","setCurrentPage","setSearchQuery","isLoading","setIsLoading","setError","setLargeImageURL","state","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","shouldRenderLoadMoreButton","length","message","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed1a2286.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2Emos\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__xRA_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3cjl6\",\"Modal\":\"Modal_Modal__3kQ6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1PG7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ZrH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3ER5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3ukwM\",\"SearchForm\":\"Searchbar_SearchForm__18Ksk\",\"SearchFormButton\":\"Searchbar_SearchFormButton__11b6G\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1WKkH\",\"SearchFormInput\":\"Searchbar_SearchFormInput__11Jxi\"};","import axios from 'axios';\n\nconst fetchImages = (searchQuery = '', currentPage = 1) => {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const API_KEY = '18994558-99c21eb2af8503bc6443a1f41';\n  const url = `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`;\n\n  return axios.get(url).then(response => response.data.hits);\n};\n\nexport default fetchImages;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Введіть запит.');\n      return;\n    }\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          value={query}\n          onChange={handleChange}\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  id,\n  webformatURL,\n  type,\n  largeImageURL,\n  onImgClick,\n}) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={type}\n        className={s.ImageGalleryItemImage}\n        onClick={() => onImgClick(largeImageURL)}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  // id: PropTypes.number,\n  webformatURL: PropTypes.string,\n  type: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  onImgClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ hits, onImgClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {hits.map(hit => (\n        <ImageGalleryItem\n          key={hit.id}\n          webformatURL={hit.webformatURL}\n          type={hit.tags}\n          largeImageURL={hit.largeImageURL}\n          onImgClick={onImgClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  hits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string,\n      tags: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    }),\n  ),\n  onImgClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import React from 'react';\n\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default class LoaderRings extends React.Component {\n  render() {\n    return (\n      <Loader\n        className={s.loader}\n        type=\"Bars\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={2000}\n      />\n    );\n  }\n}\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  useEffect(() => {\n    function handleKeyDown(e) {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    }\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport fetchImages from './services/img-api';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport LoaderRings from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\n\nexport default function ImagesView() {\n  const [hits, setHits] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [largeImageURL, setLargeImageURL] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetchImages(searchQuery, currentPage)\n      .then(hits => {\n        setHits(state => [...state, ...hits]);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => {\n        setError({ error });\n      })\n      .finally(() => setIsLoading(false));\n  }, [searchQuery, currentPage]);\n\n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n    setHits([]);\n    setError(null);\n  };\n\n  const openModal = url => {\n    setLargeImageURL(url);\n  };\n\n  const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\n\n  return (\n    <>\n      {largeImageURL && (\n        <Modal onClose={() => setLargeImageURL('')}>\n          <img src={largeImageURL} alt={largeImageURL} />\n        </Modal>\n      )}\n      <Searchbar onSubmit={onChangeQuery} />\n      {error && <h1>Упс, виникла помилка - {error.message}</h1>}\n      <ToastContainer autoClose={3000} />\n\n      {hits.length > 0 && <ImageGallery hits={hits} onImgClick={openModal} />}\n      {isLoading && <LoaderRings />}\n      {shouldRenderLoadMoreButton && (\n        <Button onClick={() => setCurrentPage(state => state + 1)} />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}